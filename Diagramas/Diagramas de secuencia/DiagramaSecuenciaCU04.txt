@startuml
' Actor y participantes
actor "Cliente" as Huesped
actor "Conserje" as Conserje
participant "Interfaz de Usuario" as UI
participant "Sistema" as Sistema
participant "Base de datos" as Base

' Precondición
alt Precondición: Conserje autenticado en el sistema

  note across: Inicio del caso de uso
  activate Huesped
  Huesped -> Conserje : Desea reservar habitaciones
  activate Conserje
  Conserje -> UI : Inicia reserva de habitaciones
  activate UI
  UI --> Sistema : mostrarEstadoHabitaciones()
  activate Sistema
  Sistema -> UI : mostrarGrid(renderGrilla)
  deactivate Sistema
  
  note across: Verificacion de disponibilidad de habitaciones
  alt Existencia: No existen habitaciones disponibles con las comodidades deseadas para el rango de fechas solicitado.
    Conserje --> Huesped : Informa indisponibiliad
    deactivate Conserje 
    deactivate Huesped
    deactivate UI
    note over Huesped, Conserje
      Finaliza Caso de uso
    end note
  end
  Conserje -> UI : Ingresa habitaciones y rango de fechas
  activate Conserje 
  activate Huesped
  activate UI
  UI --> Sistema : verificarHabitaciones(fechaDesde, fechaHasta, List<Habitacion>)
  activate Sistema
  Sistema -> UI : mostrarGrid(renderGrilla)
  deactivate Sistema
  loop Disponibilidad: mientras seleccione habitacion no disponible
    Conserje -> UI : Ingresa habitaciones y rango de fechas
    UI --> Sistema : verificarHabitaciones(fechaDesde, fechaHasta, List<Habitacion>)
    activate Sistema
    Sistema -> UI : mostrarGrid(renderGrilla, mensaje)
    deactivate Sistema
  end
  Conserje -> UI : siguiente
  
  note across: Verificacion de dias y habitaciones
  UI -> UI : mostrarListadoReservas()
  alt rechaza: Conserje presiona rechazar
    Conserje -> UI : rechazar
    UI -> UI : deshacerGrilla(Grilla)
    deactivate Conserje 
    deactivate Huesped
    deactivate UI
    note over Huesped, Conserje
      Finaliza Caso de uso
    end note
  end
  Conserje -> UI : aceptar
  activate Conserje 
  activate Huesped
  activate UI
  note across: Cargar responsable de reserva
  UI -> UI : ingresarResponsableReserva()
  Conserje -> Huesped : solicita datos
  Huesped --> Conserje : entrega datos
  Conserje -> UI : completa campos
  alt Campo incompleto: Conserje no completa uno o mas campos
    UI -> UI : mostrarCartelError()
    UI -> UI : pone foco en primer campo faltante
    Conserje -> UI : completa campos
  end
  
  note across: Guardar reserva en Sistema
  UI --> Sistema : Reserva(List<Habitacion>, fechaDesde, fechaHasta, Responsable)
  Sistema -> Base : crear(Reserva)
  activate Base
  Base --> Sistema : ok
  deactivate Base
  
  opt Cancelar
    Conserje -> UI : Presiona "CANCELAR"
    UI --> Sistema : solicitarCancelacion()
    activate Sistema
    Sistema -> UI : confirmarCancelacion()
    deactivate Sistema
    UI -> Conserje : Mensaje: caso de uso finalizado
  end
end

== Fin del caso de uso ==
note across
  Postcondición (éxito) -- Una o varias habitaciones han sido reservadas a nombre de un eventual huésped para un rango de fechas determinado.
  Postcondición (fracaso) -- No se ha podido realizar la reserva de alguna habitación para el eventual huésped que la ha solicitado para el rango de fechas deseado.
end note

@enduml
 
